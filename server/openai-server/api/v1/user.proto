syntax = "proto3";

package openaiserver.api.v1;

option go_package = "server/openai-server/api/v1;v1";



import "google/api/annotations.proto";
import "validate/validate.proto";

service User {
    rpc GetUserInfo (GetUserInfoRequest) returns (GetUserInfoReply) {
        option (google.api.http) = {
            get: "/v1/usermanage/user"
        };
    };
    rpc ListUserWorkspaces (ListUserWorkspacesRequest) returns (ListUserWorkspacesReply) {
        option (google.api.http) = {
            get: "/v1/usermanage/user/{userId}/workspace"
        };
    };
    // 查询用户配置
    rpc GetUserConfig (GetUserConfigRequest) returns (GetUserConfigReply) {
      option (google.api.http) = {
        get: "/v1/usermanage/config"
      };
    };
}

message UserItem {
  string id = 1;
  int64 createdAt = 2;
  int64 updatedAt = 3;
  string fullName = 4;
  string email = 5;
  string phone = 6;
  int32 gender = 8;
  int32 status = 9;
}

message GetUserInfoRequest {
}

message GetUserInfoReply {
  UserItem user = 1;
}

message WorkspaceItem {
    string id = 1;
    int64 createdAt = 2;
    int64 updatedAt = 3;
    string name = 4;
}

message WorkspaceUser {
    string id = 1;
    string fullName = 2;
    string email = 3;
}

message ListUserWorkspacesRequest {
    string userId = 1 [(validate.rules).string = {min_len: 1, max_len: 36}];
}

message ListUserWorkspacesReply {
    repeated WorkspaceItem workspaces = 1;
}

message GetUserConfigRequest {
}

message GetUserConfigReply {
  map<string, string> config = 1;
}