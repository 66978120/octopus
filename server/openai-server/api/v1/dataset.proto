syntax = "proto3";

package openaiserver.api.v1;

option go_package = "server/openai-server/api/v1;v1";



import "google/api/annotations.proto";
import "validate/validate.proto";

service DatasetService {
  // 查询数据集类型列表
  rpc ListDatasetType (ListDatasetTypeRequest) returns (ListDatasetTypeReply) {
    option (google.api.http) = {
      get: "/v1/datasetmanage/datasettype"
    }; 
  }

  // 查询数据集用途列表
  rpc ListDatasetApply (ListDatasetApplyRequest) returns (ListDatasetApplyReply) {
    option (google.api.http) = {
      get: "/v1/datasetmanage/datasetapply"
    }; 
  }

  // 创建数据集
  rpc CreateDataset (CreateDatasetRequest) returns (CreateDatasetReply) {
    option (google.api.http) = {
      post: "/v1/datasetmanage/dataset"
      body: "*"
    };
  };
  // 查询预置数据集列表
  rpc ListPreDataset (ListPreDatasetRequest) returns (ListPreDatasetReply) {
    option (google.api.http) = {
      get: "/v1/datasetmanage/predataset"
    };
  }
  // 查询我的数据集列表
  rpc ListMyDataset (ListMyDatasetRequest) returns (ListMyDatasetReply) {
    option (google.api.http) = {
      get: "/v1/datasetmanage/mydataset"
    };
  }
  // 查询公共数据集列表
  rpc ListCommDataset (ListCommDatasetRequest) returns (ListCommDatasetReply) {
    option (google.api.http) = {
      get: "/v1/datasetmanage/commdataset"
    };
  }
  // 删除数据集
  rpc DeleteDataset (DeleteDatasetRequest) returns (DeleteDatasetReply) {
    option (google.api.http) = {
      delete: "/v1/datasetmanage/dataset/{id}"
    };
  }
  // 创建版本
  rpc CreateDatasetVersion (CreateDatasetVersionRequest) returns (CreateDatasetVersionReply) {
    option (google.api.http) = {
      post: "/v1/datasetmanage/dataset/{datasetId}/version"
      body: "*"
    };
  };
  // 查询版本列表
  rpc ListDatasetVersion (ListDatasetVersionRequest) returns (ListDatasetVersionReply) {
    option (google.api.http) = {
      get: "/v1/datasetmanage/dataset/{datasetId}/version"
    };
  };
  // 删除版本
  rpc DeleteDatasetVersion (DeleteDatasetVersionRequest) returns (DeleteDatasetVersionReply) {
    option (google.api.http) = {
      delete: "/v1/datasetmanage/dataset/{datasetId}/version/{version}"
    };
  }
  // 分享版本
  rpc ShareDatasetVersion (ShareDatasetVersionRequest) returns (ShareDatasetVersionReply) {
    option (google.api.http) = {
      post: "/v1/datasetmanage/dataset/{datasetId}/version/{version}/share"
      body: "*"
    };
  };
  // 取消分享版本
  rpc CloseShareDatasetVersion (CloseShareDatasetVersionRequest) returns (CloseShareDatasetVersionReply) {
    option (google.api.http) = {
      post: "/v1/datasetmanage/dataset/{datasetId}/version/{version}/closeshare"
      body: "*"
    };
  };
  // 确认上传成功
  rpc ConfirmUploadDatasetVersion (ConfirmUploadDatasetVersionRequest) returns (ConfirmUploadDatasetVersionReply) {
    option (google.api.http) = {
      put: "/v1/datasetmanage/dataset/{datasetId}/version/{version}/uploadconfirm"
      body: "*"
    };
  };
  // 获取上传地址
  rpc UploadDatasetVersion (UploadDatasetVersionRequest) returns (UploadDatasetVersionReply) {
    option (google.api.http) = {
      post: "/v1/datasetmanage/dataset/{datasetId}/version/{version}/upload"
      body: "*"
    };
  }
  // 预览版本
  rpc ListDatasetVersionFile (ListDatasetVersionFileRequest) returns (ListDatasetVersionFileReply) {
    option (google.api.http) = {
      get: "/v1/datasetmanage/dataset/{datasetId}/version/{version}/file"
    };
  }
    // 修改我的数据集
  rpc UpdateMyDataset (UpdateMyDatasetRequest) returns (UpdateMyDatasetReply) {
    option (google.api.http) = {
      put: "/v1/datasetmanage/mydataset/{datasetId}"
    };
  }
    // 修改我的数据集版本
  rpc UpdateMyDatasetVersion (UpdateMyDatasetVersionRequest) returns (UpdateMyDatasetVersionReply) {
    option (google.api.http) = {
      put: "/v1/datasetmanage/mydataset/{datasetId}/version/{version}"
    };
  }
}

message DatasetLable {
  string id = 1;
  string lableDesc = 2;
  int32 sourceType = 3;
}

message ListDatasetTypeRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lt:100}];
}

message ListDatasetTypeReply {
  int64 totalSize = 1;
  repeated DatasetLable lables = 2;
}

message ListDatasetApplyRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lt:100}];
}

message ListDatasetApplyReply {
  int64 totalSize = 1;
  repeated DatasetLable lables = 2;
}

message CreateDatasetRequest {
  string name = 1[(validate.rules).string = {min_len: 1, max_len: 30}];
  string typeId = 2;
  repeated string applyIds = 3;
  string desc = 4[(validate.rules).string = {max_len: 300}];
}

message CreateDatasetReply {
  string id = 1;
  string version = 2;
}

message Dataset {
  message Apply {
    string id = 1;
    string desc = 2;
  }
  int64 createdAt = 1;
  int64 updatedAt = 2;
  string id = 3;
  int32 sourceType = 6;
  string name = 7;
  string typeId = 8;
  string typeDesc = 9;
  repeated Apply applies = 10;
  string desc = 12;
  string latestVersion = 13;
  string userName = 14;
}

message ListPreDatasetRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte: 1}];
  // 页大小，最小1条，最大100条
  int64 pageSize = 2[(validate.rules).int64 = {gte: 1, lte:100}];
  string sortBy = 3;
  string orderBy = 4[(validate.rules).string = {in: ["", "asc", "desc"]}];
  int64 createdAtGte = 5;
  int64 createdAtLt = 6;
  string searchKey = 7;
  string nameLike = 8;
}

message ListPreDatasetReply {
  int64 totalSize = 1;
  repeated Dataset datasets = 2;
}

message ListMyDatasetRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  // 页大小，最小1条，最大100条
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lte:100}];
  string sortBy = 3;
  string orderBy = 4[(validate.rules).string = {in: ["", "asc", "desc"]}];
  int64 createdAtGte = 5;
  int64 createdAtLt = 6;
  string searchKey = 7;
  string nameLike = 8;
}

message ListMyDatasetReply {
  int64 totalSize = 1;
  repeated Dataset datasets = 2;
}

message ListCommDatasetRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  // 页大小，最小1条，最大100条
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lte:100}];
  string sortBy = 3;
  string orderBy = 4[(validate.rules).string = {in: ["", "asc", "desc"]}];
  int64 createdAtGte = 5;
  int64 createdAtLt = 6;
  string searchKey = 7;
  string nameLike = 8;
}

message ListCommDatasetReply {
  int64 totalSize = 1;
  repeated Dataset datasets = 2;
}

message DeleteDatasetRequest {
  string id = 1[(validate.rules).string = {min_len: 1}];
}

message DeleteDatasetReply {
  int64 deletedAt = 1;
}


message CreateDatasetVersionRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string desc = 2[(validate.rules).string = {max_len: 300}];
}

message CreateDatasetVersionReply {
  string datasetId = 1;
  string version = 2;
}

message DatasetVersion {
  int64 createdAt = 1;
  int64 updatedAt = 2;
  string datasetId = 3;
  string version = 4;
  string desc = 5;
  bool shared = 6;
  int32 status = 7;
}


message ListDatasetVersionRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  // 页大小，最小1条，最大100条
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lte:100}];
  string datasetId = 3[(validate.rules).string = {min_len: 1}];
  bool shared = 4;
  int32 status = 5;
}

message ListDatasetVersionReply {
  int64 totalSize = 1;
  repeated DatasetVersion versions = 2;
}


message DeleteDatasetVersionRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string version = 2[(validate.rules).string = {min_len: 1}];
}

message DeleteDatasetVersionReply {
  int64 deletedAt = 1;
}

message ShareDatasetVersionRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string version = 2[(validate.rules).string = {min_len: 1}];
}

message ShareDatasetVersionReply {
  int64 sharedAt = 1;
}

message CloseShareDatasetVersionRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string version = 2[(validate.rules).string = {min_len: 1}];
}

message CloseShareDatasetVersionReply {
  int64 closedAt = 1;
}

message ConfirmUploadDatasetVersionRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string version = 2[(validate.rules).string = {min_len: 1}];
  string fileName = 3[(validate.rules).string = {min_len:3,pattern:".*\\.zip+$"}];
}

message ConfirmUploadDatasetVersionReply {
  int64 updatedAt = 1;
}

message UploadDatasetVersionRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string version = 2[(validate.rules).string = {min_len: 1}];
  string fileName = 3[(validate.rules).string = {min_len:3,pattern:".*\\.zip+$"}];
  string domain = 4[(validate.rules).string = {min_len: 1,pattern:"(https?)://[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]"}];
}

message UploadDatasetVersionReply {
  string uploadUrl = 1;
}

message ListDatasetVersionFileRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string version = 2[(validate.rules).string = {min_len: 1}];
  string path = 3;
}

message ListDatasetVersionFileReply {
  message File {
    string name = 1;
    string type = 2;
    string path = 3;
  }
  repeated File files = 1;
}

message UpdateMyDatasetRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string typeId = 2;
  repeated string applyIds = 3;
  string desc = 4[(validate.rules).string = {max_len: 300}];
}

message UpdateMyDatasetReply {
  int64 updatedAt  = 1;
}

message UpdateMyDatasetVersionRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string version = 2[(validate.rules).string = {min_len: 1}];
  string desc = 5[(validate.rules).string = {max_len: 300}];
}

message UpdateMyDatasetVersionReply {
  int64 updatedAt  = 1;
}