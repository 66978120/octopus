syntax = "proto3";

package adminserver.api.v1;

option go_package = "server/base-server/api/v1;v1";



import "google/api/annotations.proto";
import "validate/validate.proto";

service BillingService {
  // 计费用户列表
  rpc ListBillingUser(ListBillingUserRequest) returns (ListBillingUserReply) {
    option (google.api.http) = {
      get: "/v1/billingmanage/user"
    };
  };
  // 用户充值
  rpc RechargeUser(RechargeUserRequest) returns (RechargeUserReply) {
    option (google.api.http) = {
      post: "/v1/billingmanage/user/{userId}/recharge"
      body: "*"
    };
  };
  // 计费群组列表
  rpc ListBillingSpace(ListBillingSpaceRequest) returns (ListBillingSpaceReply) {
    option (google.api.http) = {
      get: "/v1/billingmanage/workspace"
    };
  };
  // 群组充值
  rpc RechargeSpace(RechargeSpaceRequest) returns (RechargeSpaceReply) {
    option (google.api.http) = {
      post: "/v1/billingmanage/workspace/{spaceId}/recharge"
      body: "*"
    };
  };
}

message ListBillingUserRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lt:100}];
  string sortBy = 3;
  string orderBy = 4[(validate.rules).string = {in: ["", "asc", "desc"]}];
  string userId = 5;
}

message BillingUser {
  int64 createdAt = 1;
  int64 updatedAt = 2;
  double amount = 3;
  string userId = 4;
  string userName = 5;
}

message ListBillingUserReply {
  int64 totalSize = 1;
  repeated BillingUser billingUsers = 2;
}

message RechargeUserRequest {
  string userId = 1[(validate.rules).string = {min_len: 1}];
  double  amount = 2;
}

message RechargeUserReply {

}

message ListBillingSpaceRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lt:100}];
  string sortBy = 3;
  string orderBy = 4[(validate.rules).string = {in: ["", "asc", "desc"]}];
  string spaceId = 5;
}

message BillingSpace {
  int64 createdAt = 1;
  int64 updatedAt = 2;
  double amount = 3;
  string spaceId = 4;
  string spaceName = 5;
}

message ListBillingSpaceReply {
  int64 totalSize = 1;
  repeated BillingSpace billingSpaces = 2;
}

message RechargeSpaceRequest {
  string spaceId = 1[(validate.rules).string = {min_len: 1}];
  double  amount = 2;
}

message RechargeSpaceReply {

}