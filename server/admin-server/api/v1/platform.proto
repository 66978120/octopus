syntax = "proto3";

package adminserver.api.v1;

option go_package = "server/admin-server/api/v1;v1";


import "google/api/annotations.proto";
import "validate/validate.proto";

service PlatformService {
  // 查询第三方平台列表
  rpc ListPlatform (ListPlatformRequest) returns (ListPlatformReply) {
    option (google.api.http) = {
      get: "/v1/platformmanage/platform"
    };
  };
  // 创建第三方平台
  rpc CreatePlatform (CreatePlatformRequest) returns (CreatePlatformReply) {
    option (google.api.http) = {
      post: "/v1/platformmanage/platform"
      body: "*"
    };
  };
  // 更新第三方平台
  rpc UpdatePlatform (UpdatePlatformRequest) returns (UpdatePlatformReply) {
    option (google.api.http) = {
      put: "/v1/platformmanage/platform"
      body: "*"
    };
  };

  rpc ListPlatformStorageConfig (ListPlatformStorageConfigRequest) returns (ListPlatformStorageConfigReply);
  rpc CreatePlatformStorageConfig (CreatePlatformStorageConfigRequest) returns (CreatePlatformStorageConfigReply);
  rpc DeletePlatformStorageConfig (DeletePlatformStorageConfigRequest) returns (DeletePlatformStorageConfigReply);
  rpc ListPlatformConfigKey (ListPlatformConfigKeyRequest) returns (ListPlatformConfigKeyReply);
}

message ListPlatformRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lt:100}];
  string sortBy = 3;
  string orderBy = 4[(validate.rules).string = {in: ["", "asc", "desc"]}];
  int64 createdAtGte = 5;
  int64 createdAtLt = 6;
  string searchKey = 7;
}

message Platform {
  int64 createdAt = 1;
  int64 updatedAt = 2;
  string id = 3;
  string name = 4;
  string clientSecret = 5;
  string contactName = 6;
  string contactInfo = 7;
  string resourcePool = 8;
}

message ListPlatformReply {
  int64 totalSize = 1;
  repeated Platform platforms = 2;
}

message CreatePlatformRequest {
  // 名称，必填
  string name = 1[(validate.rules).string = {min_len: 1, max_len: 30}];
  // 联系人姓名，选填
  string contactName = 2;
  // 联系方式，选填
  string contactInfo = 3;
  // 资源池，必填
  string resourcePool = 4[(validate.rules).string = {min_len: 1}];
}

message CreatePlatformReply {
  string id = 1;
}

message UpdatePlatformRequest {
  string id = 1;
  string contactName = 2;
  string contactInfo = 3;
  string resourcePool = 4[(validate.rules).string = {min_len: 1}];
}

message UpdatePlatformReply {

}


message StorageOptions {

}

message ListPlatformStorageConfigRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lt:100}];
  string sortBy = 3;
  string orderBy = 4[(validate.rules).string = {in: ["", "asc", "desc"]}];
  int64 createdAtGte = 5;
  int64 createdAtLt = 6;
  string searchKey = 7;
  string platformId = 8;
}

message PlatformStorageConfig {
  int64 createdAt = 1;
  int64 updatedAt = 2;
  string id = 3;
  string platformId = 4;
  string name = 5;
  string type = 6;
  StorageOptions options = 7;
}

message ListPlatformStorageConfigReply {
  int64 totalSize = 1;
  repeated PlatformStorageConfig platformStorageConfigs = 2;
}

message CreatePlatformStorageConfigRequest {
  string platformId = 1[(validate.rules).string = {min_len: 1}];
  string name = 2[(validate.rules).string = {min_len: 1, max_len: 30}];
  string type = 3[(validate.rules).string = {min_len: 1}];
  StorageOptions options = 4;
}

message CreatePlatformStorageConfigReply {
  string id = 1;
}

message DeletePlatformStorageConfigRequest {
  string id = 1;
}

message DeletePlatformStorageConfigReply {

}

message ListPlatformConfigKeyRequest {

}

message ListPlatformConfigKeyReply {
  message ConfigKey {
    string key = 1;
    string keyDesc = 2;
  }
  repeated ConfigKey configKeys = 1;
}