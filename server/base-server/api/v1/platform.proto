syntax = "proto3";

package baseserver.api.v1;

option go_package = "server/base-server/api/v1;v1";



import "validate/validate.proto";

service PlatformService {
  rpc ListPlatform (ListPlatformRequest) returns (ListPlatformReply);
  rpc BatchGetPlatform (BatchGetPlatformRequest) returns (BatchGetPlatformReply);
  rpc CreatePlatform (CreatePlatformRequest) returns (CreatePlatformReply);
  rpc UpdatePlatform (UpdatePlatformRequest) returns (UpdatePlatformReply);
  rpc ListPlatformConfigKey (ListPlatformConfigKeyRequest) returns (ListPlatformConfigKeyReply);

  rpc ListPlatformStorageConfig (ListPlatformStorageConfigRequest) returns (ListPlatformStorageConfigReply);
  rpc CreatePlatformStorageConfig (CreatePlatformStorageConfigRequest) returns (CreatePlatformStorageConfigReply);
  rpc DeletePlatformStorageConfig (DeletePlatformStorageConfigRequest) returns (DeletePlatformStorageConfigReply);
  rpc GetPlatformStorageConfigByName (GetPlatformStorageConfigByNameRequest) returns (GetPlatformStorageConfigByNameReply);

  rpc GetPlatformConfig (GetPlatformConfigRequest) returns (GetPlatformConfigReply);
  rpc UpdatePlatformConfig (UpdatePlatformConfigRequest) returns (UpdatePlatformConfigReply);
}

message ListPlatformRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lt:100}];
  string sortBy = 3;
  string orderBy = 4[(validate.rules).string = {in: ["", "asc", "desc"]}];
  int64 createdAtGte = 5;
  int64 createdAtLt = 6;
  string searchKey = 7;
}

message Platform {
  int64 createdAt = 1;
  int64 updatedAt = 2;
  string id = 3;
  string name = 4;
  string clientSecret = 5;
  string contactName = 6;
  string contactInfo = 7;
  string resourcePool = 8;
}

message ListPlatformReply {
  int64 totalSize = 1;
  repeated Platform platforms = 2;
}

message BatchGetPlatformRequest {
  repeated string ids = 1;
}

message BatchGetPlatformReply {
  repeated Platform platforms = 1;
}

message CreatePlatformRequest {
  string name = 1[(validate.rules).string = {min_len: 1}];
  string contactName = 2;
  string contactInfo = 3;
  string resourcePool = 4[(validate.rules).string = {min_len: 1}];
}

message CreatePlatformReply {
  string id = 1;
}

message UpdatePlatformRequest {
  string id = 1[(validate.rules).string = {min_len: 1}];
  string contactName = 2;
  string contactInfo = 3;
  string resourcePool = 4[(validate.rules).string = {min_len: 1}];
}

message UpdatePlatformReply {

}

message ListPlatformConfigKeyRequest {

}

message ListPlatformConfigKeyReply {
  message ConfigKey {
    string key = 1;
    string keyDesc = 2;
  }
  repeated ConfigKey configKeys = 1;
}

message StorageOptions {

}

message ListPlatformStorageConfigRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lt:100}];
  string sortBy = 3;
  string orderBy = 4[(validate.rules).string = {in: ["", "asc", "desc"]}];
  int64 createdAtGte = 5;
  int64 createdAtLt = 6;
  string searchKey = 7;
  string platformId = 8;
}

message PlatformStorageConfig {
  int64 createdAt = 1;
  int64 updatedAt = 2;
  string id = 3;
  string platformId = 4;
  string name = 5;
  string type = 6;
  StorageOptions options = 7;
}

message ListPlatformStorageConfigReply {
  int64 totalSize = 1;
  repeated PlatformStorageConfig platformStorageConfigs = 2;
}

message CreatePlatformStorageConfigRequest {
  string platformId = 1[(validate.rules).string = {min_len: 1}];
  string name = 2[(validate.rules).string = {min_len: 1}];
  string type = 3[(validate.rules).string = {min_len: 1}];
  StorageOptions options = 4;
}

message CreatePlatformStorageConfigReply {
  string id = 1;
}

message DeletePlatformStorageConfigRequest {
  string id = 1;
}

message DeletePlatformStorageConfigReply {

}

message GetPlatformStorageConfigByNameRequest {
  string platformId = 1;
  string name = 2;
}

message GetPlatformStorageConfigByNameReply {
  PlatformStorageConfig platformStorageConfig = 1;
}

message GetPlatformConfigRequest {
  string platformId = 1;
}

message GetPlatformConfigReply {
  map<string, string> config = 1;
}

message UpdatePlatformConfigRequest {
  string platformId = 1;
  map<string, string> config = 2;
}

message UpdatePlatformConfigReply {

}