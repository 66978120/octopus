syntax = "proto3";

package baseserver.api.v1;

option go_package = "server/base-server/api/v1;v1";



import "validate/validate.proto";

service DatasetService {
  // 创建数据集
  rpc CreateDataset (CreateDatasetRequest) returns (CreateDatasetReply);
  // 查询数据集列表
  rpc ListDataset (ListDatasetRequest) returns (ListDatasetReply);
  // 查询公共数据集列表
  rpc ListCommDataset (ListCommDatasetRequest) returns (ListCommDatasetReply);
  // 查询数据集详情
  rpc GetDataset (GetDatasetRequest) returns (GetDatasetReply);
  // 删除数据集
  rpc DeleteDataset (DeleteDatasetRequest) returns (DeleteDatasetReply);

  // 查询版本列表
  rpc ListDatasetVersion (ListDatasetVersionRequest) returns (ListDatasetVersionReply);
  // 查询公共版本列表
  rpc ListCommDatasetVersion (ListCommDatasetVersionRequest) returns (ListCommDatasetVersionReply);
  // 创建版本
  rpc CreateDatasetVersion (CreateDatasetVersionRequest) returns (CreateDatasetVersionReply);
  // 分享版本
  rpc ShareDatasetVersion (ShareDatasetVersionRequest) returns (ShareDatasetVersionReply);
  // 取消分享版本
  rpc CloseShareDatasetVersion (CloseShareDatasetVersionRequest) returns (CloseShareDatasetVersionReply);
  // 查询版本详情
  rpc GetDatasetVersion (GetDatasetVersionRequest) returns (GetDatasetVersionReply);
  // 删除版本
  rpc DeleteDatasetVersion (DeleteDatasetVersionRequest) returns (DeleteDatasetVersionReply);
  // 预览版本
  rpc ListDatasetVersionFile (ListDatasetVersionFileRequest) returns (ListDatasetVersionFileReply);
  // 获取上传地址
  rpc UploadDatasetVersion (UploadDatasetVersionRequest) returns (UploadDatasetVersionReply);
  // 确认上传成功
  rpc ConfirmUploadDatasetVersion (ConfirmUploadDatasetVersionRequest) returns (ConfirmUploadDatasetVersionReply);
}

enum DatasetSourceType {
  DST_PLACEHOLDER = 0;
  DST_PRE = 1;
  DST_USER = 2;
}

enum DatasetVersionStatus {
  DVS_PLACEHOLDER = 0;
  DVS_Init        = 1;
  DVS_Unzipping   = 2;
  DVS_Unzipped    = 3;
  DVS_UnzipFailed = 4;
}

message CreateDatasetRequest {
  string spaceId = 1;
  string userId = 2;
  DatasetSourceType sourceType = 3[(validate.rules).enum = {in: [1,2]}];
  string name = 4[(validate.rules).string = {min_len: 1}];
  string type = 5[(validate.rules).string = {min_len: 1}];
  string desc = 6;
}

message CreateDatasetReply {
  string id = 1;
  string version = 2;
}

message ListDatasetRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lt:100}];
  string sortBy = 3;
  string orderBy = 4[(validate.rules).string = {in: ["", "asc", "desc"]}];
  int64 createdAtGte = 5;
  int64 createdAtLt = 6;
  string searchKey = 7;
  string nameLike = 8;
  string userId = 9;
  string spaceId = 10;
  DatasetSourceType sourceType = 11;
  repeated string ids = 12;
}

message Dataset {
  int64 createdAt = 1;
  int64 updatedAt = 2;
  string id = 3;
  string spaceId = 4;
  string userId = 5;
  DatasetSourceType sourceType = 6;
  string name = 7;
  string type = 8;
  string desc = 9;
  string latestVersion = 10;
}

message ListDatasetReply {
  int64 totalSize = 1;
  repeated Dataset datasets = 2;
}

message ListCommDatasetRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lt:100}];
  string sortBy = 3;
  string orderBy = 4[(validate.rules).string = {in: ["", "asc", "desc"]}];
  int64 createdAtGte = 5;
  int64 createdAtLt = 6;
  string searchKey = 7;
  string nameLike = 8;
  string userId = 9;
  string spaceId = 10;
  string shareSpaceId = 11;
  DatasetSourceType sourceType = 12;
  repeated string ids = 13;
}

message ListCommDatasetReply {
  int64 totalSize = 1;
  repeated Dataset datasets = 2;
}

message DatasetVersionId {
  string datasetId = 1;
  string version = 2;
}

message ListDatasetVersionRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lt:100}];
  string datasetId = 3;
  repeated DatasetVersionId ids = 5;
  int32 status = 6;
}

message DatasetVersion {
  int64 createdAt = 1;
  int64 updatedAt = 2;
  string datasetId = 3;
  string version = 4;
  string desc = 5;
  string path = 6;
  int32 status = 7;
}

message ListDatasetVersionReply {
  int64 totalSize = 1;
  repeated DatasetVersion versions = 2;
}

message ListCommDatasetVersionRequest {
  int64 pageIndex = 1[(validate.rules).int64 = {gte:1}];
  int64 pageSize = 2[(validate.rules).int64 = {gte:1,lt:100}];
  string datasetId = 3;
  string shareSpaceId = 4;
  repeated DatasetVersionId ids = 5;
  int32 status = 6;
}

message ListCommDatasetVersionReply {
  int64 totalSize = 1;
  repeated DatasetVersion versions = 2;
}

message GetDatasetRequest {
  string id = 1[(validate.rules).string = {min_len: 1}];
}

message GetDatasetReply {
  Dataset dataset = 1;
}

message DeleteDatasetRequest {
  string id = 1[(validate.rules).string = {min_len: 1}];
}

message DeleteDatasetReply {
  int64 deletedAt = 1;
}

message CreateDatasetVersionRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string desc = 2;
}

message CreateDatasetVersionReply {
  string datasetId = 1;
  string version = 2;
}

message ShareDatasetVersionRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string version = 2[(validate.rules).string = {min_len: 1}];
  string shareSpaceId = 3[(validate.rules).string = {min_len: 1}];
}

message ShareDatasetVersionReply {
  int64 sharedAt = 1;
}

message CloseShareDatasetVersionRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string version = 2[(validate.rules).string = {min_len: 1}];
  string shareSpaceId = 3[(validate.rules).string = {min_len: 1}];
}

message CloseShareDatasetVersionReply {
  int64 closedAt = 1;
}

message GetDatasetVersionRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string version = 2[(validate.rules).string = {min_len: 1}];
}

message DatasetVersionAccess {
  string datasetId = 1;
  string version = 2;
  string spaceId = 3;
}

message GetDatasetVersionReply {
  DatasetVersion version = 1;
  Dataset dataset = 2;
  repeated DatasetVersionAccess versionAccesses = 3;
}

message DeleteDatasetVersionRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string version = 2[(validate.rules).string = {min_len: 1}];
}

message DeleteDatasetVersionReply {
  int64 deletedAt = 1;
}

message ListDatasetVersionFileRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string version = 2[(validate.rules).string = {min_len: 1}];
  string path = 3;
}

message ListDatasetVersionFileReply {
  message File {
    string name = 1;
    string type = 2;
    string path = 3;
  }
  repeated File files = 1;
}

message ConfirmUploadDatasetVersionRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string version = 2[(validate.rules).string = {min_len: 1}];
  string fileName = 3[(validate.rules).string = {min_len: 1}];
}

message ConfirmUploadDatasetVersionReply {
  int64 updatedAt = 1;
}

message UploadDatasetVersionRequest {
  string datasetId = 1[(validate.rules).string = {min_len: 1}];
  string version = 2[(validate.rules).string = {min_len: 1}];
  string fileName = 3[(validate.rules).string = {min_len: 1}];
  string domain = 4[(validate.rules).string = {min_len: 1,pattern:"(https?)://[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]"}];
}

message UploadDatasetVersionReply {
  string uploadUrl = 1;
}