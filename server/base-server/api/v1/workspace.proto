syntax = "proto3";

package baseserver.api.v1;

option go_package = "server/base-server/api/v1;v1";



import "validate/validate.proto";

service Workspace {
  rpc CreateWorkspace (CreateWorkspaceRequest) returns (CreateWorkspaceReply);
  rpc UpdateWorkspace (UpdateWorkspaceRequest) returns (UpdateWorkspaceReply);
  rpc DeleteWorkspace (DeleteWorkspaceRequest) returns (DeleteWorkspaceReply);
  rpc ListWorkspace (ListWorkspaceRequest) returns (ListWorkspaceReply);
  rpc FindWorkspace (FindWorkspaceRequest) returns (FindWorkspaceReply);
  rpc GetWorkspace (GetWorkspaceRequest) returns (GetWorkspaceReply);
  rpc ListUserWorkspaces (ListUserWorkspacesRequest) returns (ListUserWorkspacesReply);
  rpc ListWorkspaceInCond (ListWorkspaceInCondRequest) returns (ListWorkspaceInCondReply);
}

message WorkspaceItem {
  string id = 1;
  int64 createdAt = 2;
  int64 updatedAt = 3;
  string name = 4;
  string resourcePoolId = 5;
}

message WorkspaceUser {
  string id = 1;
  string fullName = 2;
  string email = 3;
}

message CreateWorkspaceRequest {
  string name = 1 [(validate.rules).string = {min_len: 1, max_len: 30}];
  string resourcePoolId = 2 [(validate.rules).string = {min_len: 1, max_len: 36}];
  repeated string userIds = 3 [(validate.rules).repeated.items.string = {min_len: 1, max_len: 36}];
}

message CreateWorkspaceReply {
  string id = 1;
}

message UpdateWorkspaceRequest {
  string workspaceId = 1 [(validate.rules).string = {min_len: 1, max_len: 36}];
  string name = 2 [(validate.rules).string = {max_len: 30}];
  string resourcePoolId = 3 [(validate.rules).string = {max_len: 36}];
  repeated string userIds = 4 [(validate.rules).repeated.items.string = {min_len: 1, max_len: 36}];
}

message UpdateWorkspaceReply {
  int64 updatedAt = 1;
}

message DeleteWorkspaceRequest {
  string workspaceId = 1 [(validate.rules).string = {min_len: 1, max_len: 36}];
}

message DeleteWorkspaceReply {
  int64 deletedAt = 1;
}

message ListWorkspaceRequest {
  uint32 pageIndex = 1 [(validate.rules).uint32 = {gte:1}];
  uint32 pageSize = 2 [(validate.rules).uint32 = {gte:1,lte:100}];
  string sortBy = 3 [(validate.rules).string = {in: ["", "asc", "desc"]}];
  string orderBy = 4 [(validate.rules).string = {max_len: 20}];
  string name = 5 [(validate.rules).string = {max_len: 30}];
  string searchKey = 6 [(validate.rules).string = {max_len: 50}];
}

message ListWorkspaceReply {
  int64 totalSize = 1;
  repeated WorkspaceItem workspaces = 2;
}

message FindWorkspaceRequest {
  string id = 1 [(validate.rules).string = {min_len: 1, max_len: 36}];
}

message FindWorkspaceReply {
  WorkspaceItem workspace = 1;
}

message GetWorkspaceRequest {
  string workspaceId = 1 [(validate.rules).string = {min_len: 1, max_len: 36}];
}

message GetWorkspaceReply {
  WorkspaceItem workspace = 1;
  repeated WorkspaceUser users = 2;
}

message ListUserWorkspacesRequest {
  string UserId = 1 [(validate.rules).string = {min_len: 1, max_len: 36}];
}

message ListUserWorkspacesReply {
  repeated WorkspaceItem workspaces = 1;
}

message ListWorkspaceInCondRequest {
  repeated string ids = 1;
}

message ListWorkspaceInCondReply {
  repeated WorkspaceItem workspaces = 2;
}